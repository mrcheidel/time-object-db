swagger: "2.0"
info:
  title: Time Object DB
  version: 1.0.6
  description: '<b>Time Object DB API Contract</b> <br>
  Swagger Contract that describe the use of this database'
  contact:
    name: Claudio Heidel Schemberger
    url: 'https://www.linkedin.com/in/mrcheidel/'
host: 'time-object-db.claudioheidel.repl.co'
basePath: /v1
schemes:
  - https
tags:
  - name: Databases
  - name: Metrics
  - name: Objects
  - name: Health
paths:

  '/health':
    get:
      summary: Health check end point
      description:  Health check end point
      operationId: healthOperation
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Health
      responses:
        '200':
          description: OK - The list of resources was retrieved successfully and it is included in the body of the response.
          schema:
            $ref: '#/definitions/healthEnquiryResponse'
        
  '/databases/{databaseId}/metrics/{metricId}/objects':
    get:
      summary: Service to fetch the list of metrics objects.
      description: This service fetches the list objects in the metric in an time interval.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Objects
      operationId: resourceListEnquiry
      parameters:
        - name: token
          in: header
          required: true
          type: string
          description: Security Key
        - name: databaseId
          in: path
          description: Database Identifier
          required: true
          type: string
        - name: metricId
          in: path
          description: Metric Identifier
          required: true
          type: string
        - name: fr
          in: query
          description: 'From Epoc datetime. Example: 1572949522'
          required: true
          type: number
        - name: to
          in: query
          description: 'To Epoc datetime. Example: 1572949522'
          required: true
          type: number
      responses:
        '200':
          description: OK - The list of resources was retrieved successfully and it is included in the body of the response.
          schema:
            $ref: '#/definitions/metricEnquiryResponse'
        '400':
          description: Bad Request - If the resource is misspelled (badly constructed URI) / If the data in the request is not correct.
          schema:
            $ref: '#/definitions/400BadRequestError'
        '403':
            description: Forbidden - Invalid heade security token.
            schema:
              $ref: '#/definitions/403ForbiddenError'
        '404':
          description: "Resource not found"
          schema:
            $ref: '#/definitions/404NotFoundError'
        '500':
          description: Internal Server Error - Use it as a General System Error.
          schema:
            $ref: '#/definitions/500InternalServerError'

    post:
      summary: Service to create a new metric (if not exist) and a new object.
      description: This service creates a new value in the metrics collection. The payload in the request body must contain all the mandatory attributes defined for the Resource object (Bussiness Data Schema). The response will contain the resource identifier and the link to retrieve the complete details of the resource.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Objects
      operationId: metricCreationEnquiry
      parameters:
        - name: token
          in: header
          required: true
          type: string
          description: Security Key
        - name: databaseId
          in: path
          description: Database Identifier
          required: true
          type: string
        - name: metricId
          in: path
          description: Metric Identifier
          required: true
          type: string
          
        - name: request
          in: body
          description: Object to be inserted into the DB
          required: true
          schema:
            $ref: "#/definitions/metricCreationRequest"
      responses:
        '201':
          description: Created - The resource was created successfully and its identifier and link to the details are included in the body of the response.
          schema:
            $ref: '#/definitions/metricCreationResponse'
        '400':
          description: Bad Request - If the resource is misspelled (badly constructed URI) / If the data in the request is not correct.
          schema:
            $ref: '#/definitions/400BadRequestError'
        '403':
            description: Forbidden - Invalid heade security token.
            schema:
              $ref: '#/definitions/403ForbiddenError'
        '500':
          description: Internal Server Error - Use it as a General System Error.
          schema:
            $ref: '#/definitions/500InternalServerError'
            
  '/databases/{databaseId}/metrics/{metricId}/events':
    get:
      summary: Service Sent Event Listener 
      description: Service Sent Event Listener
      consumes:
        - application/json
      produces:
        - text/event-stream
      tags:
        - Metrics
      operationId: resourceListenerEnquiry
      parameters:
        - name: databaseId
          in: path
          description: Database Identifier
          required: true
          type: string
        - name: metricId
          in: path
          description: Metric Identifier
          required: true
          type: string
      responses:
        '200':
          description: Created - The resource was created successfully and its identifier and link to the details are included in the body of the response.
          schema:
            $ref: '#/definitions/metricListenerResponse'

        '400':
          description: Bad Request - If the resource is misspelled (badly constructed URI) / If the data in the request is not correct.
          schema:
            $ref: '#/definitions/400BadRequestError'
        '403':
            description: Forbidden - Invalid heade security token.
            schema:
              $ref: '#/definitions/403ForbiddenError'
        '404':
          description: "Resource not found"
          schema:
            $ref: '#/definitions/404NotFoundError'
        '500':
          description: Internal Server Error - Use it as a General System Error.
          schema:
            $ref: '#/definitions/500InternalServerError'

  '/databases':
    post:
      summary: Service to create a new database.
      description: Service to create a new database.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Databases
      operationId: createDatabase
      responses:
        '201':
          description: Created - The resource was created successfully and its identifier and link to the details are included in the body of the response.
          schema:
            $ref: '#/definitions/databaseCreationResponse'
        '400':
          description: Bad Request - If the resource is misspelled (badly constructed URI) / If the data in the request is not correct.
          schema:
            $ref: '#/definitions/400BadRequestError'
        '500':
          description: Internal Server Error - Use it as a General System Error.
          schema:
            $ref: '#/definitions/500InternalServerError'
            
  '/databases/{databaseId}':
    delete:
      summary: Service to delete an complete database .
      description: Service to clear an complete database.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Databases
      operationId: metricDelete
      parameters:
        - name: token
          in: header
          required: true
          type: string
          description: Security Key
        - name: databaseId
          in: path
          description: Database Identifier
          required: true
          type: string
      responses:
        '204':
          description: Created - The resource was created successfully and its identifier and link to the details are included in the body of the response.
        '400':
          description: Bad Request - If the resource is misspelled (badly constructed URI) / If the data in the request is not correct.
          schema:
            $ref: '#/definitions/400BadRequestError'
        '403':
          description: Forbidden - Invalid heade security token.
          schema:
            $ref: '#/definitions/403ForbiddenError'

        '404':
          description: "Resource not found"
          schema:
            $ref: '#/definitions/404NotFoundError'
        '500':
          description: Internal Server Error - Use it as a General System Error.
          schema:
            $ref: '#/definitions/500InternalServerError' 
            

  '/databases/{databaseId}/metrics/{metricId}':
    delete:
      summary: Service to delete an complete metricId collection.
      description: Service to clear an complete metricId collection.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Metrics
      operationId: databaseDelete
      parameters:
        - name: token
          in: header
          required: true
          type: string
          description: Security Key
        - name: databaseId
          in: path
          description: Database Identifier
          required: true
          type: string
        - name: metricId
          in: path
          description: Metric Indentifier
          required: true
          type: string
      responses:
        '204':
          description: Created - The resource was created successfully and its identifier and link to the details are included in the body of the response.
        '400':
          description: Bad Request - If the resource is misspelled (badly constructed URI) / If the data in the request is not correct.
          schema:
            $ref: '#/definitions/400BadRequestError'
        '403':
            description: Forbidden - Invalid heade security token.
            schema:
              $ref: '#/definitions/403ForbiddenError'
        '404':
          description: "Resource not found"
          schema:
            $ref: '#/definitions/404NotFoundError'
        '500':
          description: Internal Server Error - Use it as a General System Error.
          schema:
            $ref: '#/definitions/500InternalServerError' 
            
  '/databases/{databaseId}/metrics/{metricId}/objects/{objectId}':
    delete:
      summary: Service to delete an object from the metricId collection.
      description: Service to delete an object from the metricId collection.
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Objects
      operationId: resourceDelete
      parameters:
        - name: token
          in: header
          required: true
          type: string
          description: Security Key
        - name: databaseId
          in: path
          description: Database Identifier
          required: true
          type: string
        - name: metricId
          in: path
          description: Metric Indentifier
          required: true
          type: string
        - name: objectId
          in: path
          description: 'Value Epoc datetime to be deleted. Example: 1572949522'
          required: true
          type: number
      responses:
        '204':
          description: Created - The resource was created successfully and its identifier and link to the details are included in the body of the response.
        '400':
          description: Bad Request - If the resource is misspelled (badly constructed URI) / If the data in the request is not correct.
          schema:
            $ref: '#/definitions/400BadRequestError'
        '404':
          description: "Resource not found"
          schema:
            $ref: '#/definitions/404NotFoundError'
        '500':
          description: Internal Server Error - Use it as a General System Error.
          schema:
            $ref: '#/definitions/500InternalServerError'
            
definitions:

  healthEnquiryResponse:
    type: object
    example:
      apiVersion: 1.0.6
      description: Time Object Db
      systemTimestampDate: '2019-11-29T12:00:36Z'
      stats:
        memoryUsage:
          rss: 45.2 MB
          heapTotal: 21.23 MB
          heapUsed: 12.55 MB
          external: 0.24 MB
        executionTime: 0.1 s

  databaseCreationResponse:
    type: object
    description: List of objects
    properties:
      databaseId:
        type: string
        description: Database Unique Identifier
        example: 'bcd9b4c0-1296-11ea-907c-11d417ac91a9'
      key:
        type: string
        description: Key to be used as security token
        example: '570af3c05cc424283c0e6bf14ffda17b3a07bd7f5f2a0d172b436805f4dexxxx'

  metricListenerResponse:
    type: string 
    description: Events
    title: metricListenerResponse

  metricEnquiryResponse:
    type: object
    description: List of objects
    properties:
      data:
        type: array
        description: Subset of attributes for each of the retrieved resources.
        items:
          type: object
      self:
        type: object
        properties:
          find:
            type: number
            description: Total number of fields in the result
            example: 1
          limit:
            type: number
            description: Max Number of elements
            example: 300
          total:
            type: number
            description: Total number of fields in the DB
            example: 300
          min:
            type: number
            description: Minimun value in the query
            example: 1572949522
          max:
            type: number
            description: Maximun value in the query
            example: 1572949522
    title: metricEnquiryResponse


  metricCreationRequest:
    type: object
    properties:
      tm:
        type: number
        description: Total number of fields in the result
      data:
        type: object
        description: Resource identifier and link to the details of the resource that has just been created.
    example:
      tm: 1572949522
      data:
        firstName: Claudio
        lastName: Heidel Schemberger
        gender: Male
        location: Madrid
        country: Spain
        sports:
          - biking
          - paragliding
          - climbing
          - running
          - hiking
        tm: 1572988888
        lat: -3.6857917
  metricCreationResponse:
    type: object
    description: Resource identifier and link to the details of the resource that has just been created.

  errorObject:
    type: object
    description: Error details
    properties:
      code:
        type: string
        description: Error code
        example: '400'
      description:
        type: string
        description: Error description
        example: Bad Request
      level:
        type: string
        description: Error level
        enum: [INFO, ERROR, WARNING, FATAL]
        example: ERROR
      message:
        type: string
        description: Error message (detailed description)
        example: Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).
    title: errorObject
    example:
      code: '400'
      description: Bad Request
      level: ERROR
      message: Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).

  400BadRequestError:
    type: object
    description: List of errors
    properties:
      errors:
        type: array
        description: Details of each of the errors
        items:
          $ref: '#/definitions/errorObject'
    title: 400BadRequestError
    example:
      errors:
        - code: '400'
          description: Bad Request
          level: ERROR
          message: Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).
          
  403ForbiddenError:
    type: object
    description: List of errors
    properties:
      errors:
        type: array
        description: Details of each of the errors
        items:
          $ref: '#/definitions/errorObject'
    title: 403ForbiddenError
    example:
      errors:
        - code: '403'
          description: Forbidden Error
          level: ERROR
          message: Forbidden Error. The user is not allowed to executed this operation.

          
  404NotFoundError:
    type: object
    description: List of errors
    properties:
      errors:
        type: array
        description: Details of each of the errors
        items:
          $ref: '#/definitions/errorObject'
    title: 404NotFoundError
    example:
      errors:
        - code: 404
          description: Resouce not found
          level: ERROR
          message: Resouce not found. Please, check the ResourceId specified.

  500InternalServerError:
    type: object
    description: List of errors
    properties:
      errors:
        type: array
        description: Details of each of the errors
        items:
          $ref: '#/definitions/errorObject'
    title: 500InternalServerError
    example:
      errors:
        - code: '500'
          description: Internal Server Error
          level: ERROR
          message: Internal Server Error. The server encountered an unexpected condition that prevented it from fulfilling the request.